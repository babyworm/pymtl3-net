# Small-scale Example 3: Automotive ADAS System
# 8 Initiators, 3 Targets
# Use case: Advanced Driver Assistance System with multiple sensors

network: 'Irregular'
num_nodes: 24

nodes:
  # === Initiators (8) ===
  - id: 0
    type: "Initiator"
    name: "Front_Camera"
    avg_throughput: 5.0
    max_throughput: 10.0
    latency_requirement: 40
    priority: 0
    traffic_pattern: "streaming"

  - id: 1
    type: "Initiator"
    name: "Rear_Camera"
    avg_throughput: 3.0
    max_throughput: 6.0
    latency_requirement: 50
    priority: 1
    traffic_pattern: "streaming"

  - id: 2
    type: "Initiator"
    name: "Radar_Processor"
    avg_throughput: 1.5
    max_throughput: 3.0
    latency_requirement: 30
    priority: 0
    traffic_pattern: "bursty"

  - id: 3
    type: "Initiator"
    name: "Lidar_Processor"
    avg_throughput: 8.0
    max_throughput: 16.0
    latency_requirement: 35
    priority: 0
    traffic_pattern: "streaming"

  - id: 4
    type: "Initiator"
    name: "Vision_AI"
    avg_throughput: 6.0
    max_throughput: 12.0
    latency_requirement: 45
    priority: 1
    traffic_pattern: "bursty"

  - id: 5
    type: "Initiator"
    name: "Sensor_Fusion"
    avg_throughput: 4.0
    max_throughput: 8.0
    latency_requirement: 25
    priority: 0
    traffic_pattern: "bursty"

  - id: 6
    type: "Initiator"
    name: "ECU_Controller"
    avg_throughput: 0.5
    max_throughput: 1.0
    latency_requirement: 20
    priority: 0
    traffic_pattern: "bursty"

  - id: 7
    type: "Initiator"
    name: "CAN_Gateway"
    avg_throughput: 0.2
    max_throughput: 0.5
    latency_requirement: 15
    priority: 0
    traffic_pattern: "uniform"

  # === NIUs (10) ===
  - id: 8
    type: "NIU"
    name: "Camera0_NIU"
    width: 128
    clock_domain: "fast"

  - id: 9
    type: "NIU"
    name: "Camera1_NIU"
    width: 64
    clock_domain: "fast"

  - id: 10
    type: "NIU"
    name: "Radar_NIU"
    width: 64
    clock_domain: "fast"

  - id: 11
    type: "NIU"
    name: "Lidar_NIU"
    width: 128
    clock_domain: "fast"

  - id: 12
    type: "NIU"
    name: "AI_NIU"
    width: 128
    clock_domain: "fast"

  - id: 13
    type: "NIU"
    name: "Fusion_NIU"
    width: 64
    clock_domain: "fast"

  - id: 14
    type: "NIU"
    name: "ECU_NIU"
    width: 32
    clock_domain: "slow"

  - id: 15
    type: "NIU"
    name: "CAN_NIU"
    width: 32
    clock_domain: "slow"

  - id: 16
    type: "NIU"
    name: "DDR_NIU"
    width: 128
    clock_domain: "fast"

  - id: 17
    type: "NIU"
    name: "SRAM_NIU"
    width: 64
    clock_domain: "fast"

  # === Routers (3) ===
  - id: 18
    type: "Router"
    name: "Sensor_Router"
    width: 128
    clock_domain: "fast"
    num_ports: 5

  - id: 19
    type: "Router"
    name: "Processing_Router"
    width: 128
    clock_domain: "fast"
    num_ports: 4

  - id: 20
    type: "Router"
    name: "Control_Router"
    width: 32
    clock_domain: "slow"
    num_ports: 3

  # === Arbiter (1) ===
  - id: 21
    type: "Arbiter"
    name: "Memory_Arbiter"
    num_inputs: 4
    width: 128
    clock_domain: "fast"
    policy: "priority"

  # === Targets (3) ===
  - id: 22
    type: "Target"
    name: "DDR4_Main"
    max_bandwidth: 38.4
    latency: 80
    size: 8
    type_detail: "DRAM"

  - id: 23
    type: "Target"
    name: "Safety_SRAM"
    max_bandwidth: 20.0
    latency: 5
    size: 0.128
    type_detail: "SRAM"

  - id: 24
    type: "Target"
    name: "Event_Logger"
    max_bandwidth: 1.0
    latency: 50
    size: 1
    type_detail: "Flash"

graph:
  edges:
    # Initiator → NIU
    - src: 0
      dst: 8
      width: 128
      latency: 1

    - src: 1
      dst: 9
      width: 64
      latency: 1

    - src: 2
      dst: 10
      width: 64
      latency: 1

    - src: 3
      dst: 11
      width: 128
      latency: 1

    - src: 4
      dst: 12
      width: 128
      latency: 1

    - src: 5
      dst: 13
      width: 64
      latency: 1

    - src: 6
      dst: 14
      width: 32
      latency: 1

    - src: 7
      dst: 15
      width: 32
      latency: 1

    # Sensor NIUs → Sensor Router
    - src: 8
      dst: 18
      width: 128
      latency: 1

    - src: 9
      dst: 18
      width: 64
      latency: 1

    - src: 10
      dst: 18
      width: 64
      latency: 1

    - src: 11
      dst: 18
      width: 128
      latency: 1

    # Processing NIUs → Processing Router
    - src: 12
      dst: 19
      width: 128
      latency: 1

    - src: 13
      dst: 19
      width: 64
      latency: 1

    # Control NIUs → Control Router
    - src: 14
      dst: 20
      width: 32
      latency: 1

    - src: 15
      dst: 20
      width: 32
      latency: 1

    # Routers → Memory Arbiter
    - src: 18
      dst: 21
      width: 128
      latency: 1

    - src: 19
      dst: 21
      width: 128
      latency: 1

    - src: 20
      dst: 21
      width: 32
      latency: 2

    - src: 13
      dst: 21
      width: 64
      latency: 1

    - src: 21
      dst: 16
      width: 128
      latency: 2

    # Processing Router → SRAM NIU
    - src: 19
      dst: 17
      width: 64
      latency: 1

    # Memory NIUs → Targets
    - src: 16
      dst: 22
      width: 128
      latency: 5

    - src: 17
      dst: 23
      width: 64
      latency: 2

    - src: 20
      dst: 24
      width: 32
      latency: 8

constraints:
  niu_entry_only: true

  clock_domains:
    - name: "fast"
      frequency: 1000
    - name: "slow"
      frequency: 200

  enforce_width_match: false
  max_end_to_end_latency: 100

  bandwidth_allocation:
    - initiator: 0
      target: 22
      guaranteed_bw: 5.0
      max_latency: 50
      priority: 0

    - initiator: 3
      target: 22
      guaranteed_bw: 8.0
      max_latency: 45
      priority: 0

    - initiator: 4
      target: 22
      guaranteed_bw: 6.0
      max_latency: 55
      priority: 1

    - initiator: 5
      target: 23
      guaranteed_bw: 4.0
      max_latency: 30
      priority: 0

    - initiator: 2
      target: 23
      guaranteed_bw: 1.5
      max_latency: 35
      priority: 0

    - initiator: 6
      target: 24
      guaranteed_bw: 0.5
      max_latency: 70
      priority: 1

  validate_bandwidth: true
  validate_latency: true
